# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/e2guardian
pkglibdir = $(libdir)/e2guardian
pkgincludedir = $(includedir)/e2guardian
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
sbin_PROGRAMS = e2guardian$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_finalize.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/dgconfig.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(sbin_PROGRAMS)
am__e2guardian_SOURCES_DIST = String.cpp String.hpp FDTunnel.cpp \
	FDTunnel.hpp ConnectionHandler.cpp ConnectionHandler.hpp \
	DataBuffer.cpp DataBuffer.hpp HTTPHeader.cpp HTTPHeader.hpp \
	NaughtyFilter.cpp NaughtyFilter.hpp BackedStore.cpp \
	BackedStore.hpp RegExp.cpp RegExp.hpp FDFuncs.cpp FDFuncs.hpp \
	BaseSocket.cpp BaseSocket.hpp Socket.cpp Socket.hpp \
	FatController.cpp FatController.hpp UDSocket.cpp UDSocket.hpp \
	SysV.cpp SysV.hpp ListContainer.cpp ListContainer.hpp Auth.cpp \
	Auth.hpp HTMLTemplate.cpp HTMLTemplate.hpp \
	LanguageContainer.cpp LanguageContainer.hpp DynamicURLList.cpp \
	DynamicURLList.hpp DynamicIPList.cpp DynamicIPList.hpp \
	ImageContainer.cpp ImageContainer.hpp IPList.cpp IPList.hpp \
	LOptionContainer.cpp LOptionContainer.hpp \
	OptionContainer.cpp OptionContainer.hpp FOptionContainer.cpp \
	FOptionContainer.hpp ListManager.cpp ListManager.hpp md5.cpp \
	md5.hpp DownloadManager.cpp DownloadManager.hpp ConfigVar.cpp \
	ConfigVar.hpp ContentScanner.cpp ContentScanner.hpp \
	SocketArray.cpp SocketArray.hpp e2guardian.cpp Plugin.hpp \
	CertificateAuthority.cpp CertificateAuthority.hpp \
	contentscanners/icapscan.cpp contentscanners/kavdscan.cpp \
	contentscanners/clamdscan.cpp contentscanners/avastdscan.cpp \
	contentscanners/commandlinescan.cpp \
	downloadmanagers/default.cpp downloadmanagers/fancy.cpp \
	downloadmanagers/trickle.cpp authplugins/proxy.cpp \
	authplugins/ident.cpp authplugins/ip.cpp \
	authplugins/dnsauth.cpp authplugins/port.cpp \
	authplugins/ntlm.cpp authplugins/digest.cpp \
	Queue.hpp
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = contentscanners/e2guardian-icapscan.$(OBJEXT)
#am__objects_2 = contentscanners/e2guardian-kavdscan.$(OBJEXT)
#am__objects_3 = contentscanners/e2guardian-clamdscan.$(OBJEXT)
#am__objects_4 = contentscanners/e2guardian-avastdscan.$(OBJEXT)
#am__objects_5 = contentscanners/e2guardian-commandlinescan.$(OBJEXT)
am__objects_6 = downloadmanagers/e2guardian-default.$(OBJEXT)
am__objects_7 = downloadmanagers/e2guardian-fancy.$(OBJEXT)
#am__objects_8 = downloadmanagers/e2guardian-trickle.$(OBJEXT)
am__objects_9 = authplugins/e2guardian-proxy.$(OBJEXT)
am__objects_10 = authplugins/e2guardian-ident.$(OBJEXT)
am__objects_11 = authplugins/e2guardian-ip.$(OBJEXT)
am__objects_12 =  \
	authplugins/e2guardian-dnsauth.$(OBJEXT)
am__objects_13 = authplugins/e2guardian-port.$(OBJEXT)
#am__objects_14 =  \
#	authplugins/e2guardian-ntlm.$(OBJEXT)
am__objects_15 = authplugins/e2guardian-digest.$(OBJEXT)
am_e2guardian_OBJECTS = e2guardian-String.$(OBJEXT) \
	e2guardian-FDTunnel.$(OBJEXT) \
	e2guardian-ConnectionHandler.$(OBJEXT) \
	e2guardian-DataBuffer.$(OBJEXT) \
	e2guardian-HTTPHeader.$(OBJEXT) \
	e2guardian-NaughtyFilter.$(OBJEXT) \
	e2guardian-BackedStore.$(OBJEXT) e2guardian-RegExp.$(OBJEXT) \
	e2guardian-FDFuncs.$(OBJEXT) e2guardian-BaseSocket.$(OBJEXT) \
	e2guardian-Socket.$(OBJEXT) e2guardian-FatController.$(OBJEXT) \
	e2guardian-UDSocket.$(OBJEXT) e2guardian-SysV.$(OBJEXT) \
	e2guardian-ListContainer.$(OBJEXT) e2guardian-Auth.$(OBJEXT) \
	e2guardian-HTMLTemplate.$(OBJEXT) \
	e2guardian-LanguageContainer.$(OBJEXT) \
	e2guardian-DynamicURLList.$(OBJEXT) \
	e2guardian-DynamicIPList.$(OBJEXT) \
	e2guardian-ImageContainer.$(OBJEXT) \
	e2guardian-IPList.$(OBJEXT) \
	e2guardian-OptionContainer.$(OBJEXT) \
	e2guardian-LOptionContainer.$(OBJEXT) \
	e2guardian-FOptionContainer.$(OBJEXT) \
	e2guardian-ListManager.$(OBJEXT) e2guardian-md5.$(OBJEXT) \
	e2guardian-DownloadManager.$(OBJEXT) \
	e2guardian-ConfigVar.$(OBJEXT) \
	e2guardian-ContentScanner.$(OBJEXT) \
	e2guardian-SocketArray.$(OBJEXT) \
	e2guardian-e2guardian.$(OBJEXT) \
	e2guardian-CertificateAuthority.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_13) \
	$(am__objects_14) $(am__objects_15)
e2guardian_OBJECTS = $(am_e2guardian_OBJECTS)
am__DEPENDENCIES_1 =
e2guardian_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(e2guardian_SOURCES)
DIST_SOURCES = $(am__e2guardian_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/philip/e2guardian/v4.0/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/philip/e2guardian/v4.0/missing --run tar
AUTOCONF = ${SHELL} /home/philip/e2guardian/v4.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/philip/e2guardian/v4.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/philip/e2guardian/v4.0/missing --run automake-1.9
AVASTDSUPPORT = !! Not compiled !! 
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O0
CLAMDSUPPORT = !! Not compiled !! 
COMMANDLINESUPPORT = !! Not compiled !! 
CPP = gcc -E
CPPFLAGS = -std=c++11
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -rdynamic -g -O0 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DGBINDIR = /usr/local/sbin
DGCONFDIR = /home/dg/etc/config_i1/e2guardian
DGCONFFILE = /home/dg/etc/config_i1/e2guardian/e2guardian.conf
DGDATADIR = /usr/local/share/e2guardian
DGLIBDIR = /usr/local/lib/e2guardian
DGLOGLOCATION = /usr/local/var/log/e2guardian
DGPIDDIR = /usr/local/var/run
DGPROXYGROUP = nobody
DGPROXYUSER = nobody
DNSAUTHSUPPORT = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EMAILSUPPORT = #!! Not compiled !!
ENABLE_AVASTD_FALSE = 
ENABLE_AVASTD_TRUE = #
ENABLE_CLAMD_FALSE = 
ENABLE_CLAMD_TRUE = #
ENABLE_COMMANDLINE_FALSE = 
ENABLE_COMMANDLINE_TRUE = #
ENABLE_FANCYDM_FALSE = #
ENABLE_FANCYDM_TRUE = 
ENABLE_ICAP_FALSE = 
ENABLE_ICAP_TRUE = #
ENABLE_KAVD_FALSE = 
ENABLE_KAVD_TRUE = #
ENABLE_NTLM_FALSE = 
ENABLE_NTLM_TRUE = #
ENABLE_TRICKLEDM_FALSE = 
ENABLE_TRICKLEDM_TRUE = #
EXEEXT = 
FANCYSUPPORT = 
HAVE_PCRE_FALSE = #
HAVE_PCRE_TRUE = 
ICAPSUPPORT = !! Not compiled !! 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
KAVDSUPPORT = !! Not compiled !! 
LDFLAGS =  
LIBOBJS = 
LIBS = -lz   -lssl -lcrypto -lresolv
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/philip/e2guardian/v4.0/missing --run makeinfo
NEED_CSCONFIGS_FALSE = 
NEED_CSCONFIGS_TRUE = #
NEED_CSLISTS_FALSE = 
NEED_CSLISTS_TRUE = #
NEED_DMLISTS_FALSE = #
NEED_DMLISTS_TRUE = 
NTLMSUPPORT = !! Not compiled !! 
OBJEXT = o
ORIGIPSUPPORT = #!! Not compiled !! 
PACKAGE = e2guardian
PACKAGE_BUGREPORT = 
PACKAGE_NAME = e2guardian
PACKAGE_STRING = e2guardian 3.2.0
PACKAGE_TARNAME = e2guardian
PACKAGE_VERSION = 3.2.0
PATH_SEPARATOR = :
PCRE_CFLAGS =  
PCRE_LIBS = -lpcreposix -lpcre  
PKG_CONFIG = /usr/bin/pkg-config
PRT_DNSAUTH_FALSE = #
PRT_DNSAUTH_TRUE = 
SET_MAKE = 
SHELL = /bin/sh
SSLMITMSUPPORT = 
STRIP = 
TRICKLESUPPORT = #!! Not compiled !! 
VERSION = 3.2.0
__SSLCERT_FALSE = #
__SSLCERT_TRUE = 
__SSLMITM_FALSE = #
__SSLMITM_TRUE = 
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP = 
ac_pt_PKG_CONFIG = /usr/bin/pkg-config
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/philip/e2guardian/v4.0/install-sh
libdir = ${exec_prefix}/lib/e2guardian
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = /home/dg/etc/config_i1
target_alias = 
clean_SUBDIRS = . downloadmanagers contentscanners authplugins
DISTCLEANFILES = Makefile.in
CLAMDSCAN_SOURCE = 

# A MASSIVE thank you to Lawrence Manning for pointing out the
# -export-dynamic option was needed to solve a long problem
# which stopped DG2.9 from actually running ever.
# Daniel Barron Fri 18th March 2005

# Unfortunately, since it was never made to work on anything
# other than Linux, libtool support has been removed in favour
# of configure-time options (at DB's request).
#CLAMDSCAN_SOURCE = contentscanners/clamdscan.cpp
AVASTDSCAN_SOURCE = 
#AVASTDSCAN_SOURCE = contentscanners/avastdscan.cpp
ICAPSCAN_SOURCE = 
#ICAPSCAN_SOURCE = contentscanners/icapscan.cpp
KAVDSCAN_SOURCE = 
#KAVDSCAN_SOURCE = contentscanners/kavdscan.cpp
COMMANDLINE_SOURCE = 
#COMMANDLINE_SOURCE = contentscanners/commandlinescan.cpp
DEFAULTDM_SOURCE = downloadmanagers/default.cpp
#FANCYDM_SOURCE = 
FANCYDM_SOURCE = downloadmanagers/fancy.cpp
TRICKLEDM_SOURCE = 
#TRICKLEDM_SOURCE = downloadmanagers/trickle.cpp
PROXYAUTH_SOURCE = authplugins/proxy.cpp
IDENTAUTH_SOURCE = authplugins/ident.cpp
IPAUTH_SOURCE = authplugins/ip.cpp
PORTAUTH_SOURCE = authplugins/port.cpp
DIGESTAUTH_SOURCE = authplugins/digest.cpp
NTLMAUTH_SOURCE = 
#NTLMAUTH_SOURCE = authplugins/ntlm.cpp
#DNSAUTH_SOURCE = 
DNSAUTH_SOURCE = authplugins/dnsauth.cpp
e2guardian_CXXFLAGS = $(PCRE_CFLAGS) $(AM_CXXFLAGS)
e2guardian_LDADD = $(PCRE_LIBS) $(AM_LIBS)
e2guardian_CPPFLAGS = -D__CONFFILE='"$(DGCONFFILE)"' \
			-D__LOGLOCATION='"$(DGLOGLOCATION)/"' \
			-D__PIDDIR='"$(DGPIDDIR)"' \
			-D__PROXYUSER='"$(DGPROXYUSER)"' \
			-D__PROXYGROUP='"$(DGPROXYGROUP)"' \
			-D__CONFDIR='"$(DGCONFDIR)"' \
			$(AM_CPPFLAGS)

e2guardian_SOURCES = String.cpp String.hpp \
                       FDTunnel.cpp FDTunnel.hpp \
                       ConnectionHandler.cpp ConnectionHandler.hpp \
                       DataBuffer.cpp DataBuffer.hpp \
                       HTTPHeader.cpp HTTPHeader.hpp \
                       NaughtyFilter.cpp NaughtyFilter.hpp \
		       BackedStore.cpp BackedStore.hpp\
                       RegExp.cpp RegExp.hpp \
		       FDFuncs.cpp FDFuncs.hpp \
		       BaseSocket.cpp BaseSocket.hpp \
                       Socket.cpp Socket.hpp \
                       FatController.cpp FatController.hpp \
                       UDSocket.cpp UDSocket.hpp \
                       SysV.cpp SysV.hpp \
                       ListContainer.cpp ListContainer.hpp \
                       Auth.cpp Auth.hpp \
                       HTMLTemplate.cpp HTMLTemplate.hpp \
                       LanguageContainer.cpp LanguageContainer.hpp \
                       DynamicURLList.cpp DynamicURLList.hpp \
		       DynamicIPList.cpp DynamicIPList.hpp \
                       ImageContainer.cpp ImageContainer.hpp \
		       IPList.cpp IPList.hpp \
		       Queue.hpp \
                       OptionContainer.cpp OptionContainer.hpp \
                       LOptionContainer.cpp LOptionContainer.hpp \
                       FOptionContainer.cpp FOptionContainer.hpp \
                       ListManager.cpp ListManager.hpp \
                       md5.cpp md5.hpp \
                       DownloadManager.cpp DownloadManager.hpp \
                       ConfigVar.cpp ConfigVar.hpp \
                       ContentScanner.cpp ContentScanner.hpp \
		       SocketArray.cpp SocketArray.hpp \
                       e2guardian.cpp \
		       Plugin.hpp \
                       CertificateAuthority.cpp CertificateAuthority.hpp \
		       $(ICAPSCAN_SOURCE) \
		       $(KAVDSCAN_SOURCE) $(CLAMDSCAN_SOURCE) \
		       $(AVASTDSCAN_SOURCE) \
		       $(COMMANDLINE_SOURCE) \
		       $(DEFAULTDM_SOURCE) $(FANCYDM_SOURCE) \
		       $(TRICKLEDM_SOURCE) $(PROXYAUTH_SOURCE) \
		       $(IDENTAUTH_SOURCE) $(IPAUTH_SOURCE) \
		       $(DNSAUTH_SOURCE) $(PORTAUTH_SOURCE) \
		       $(NTLMAUTH_SOURCE) $(DIGESTAUTH_SOURCE)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(mkdir_p) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
contentscanners/$(am__dirstamp):
	@$(mkdir_p) contentscanners
	@: > contentscanners/$(am__dirstamp)
contentscanners/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) contentscanners/$(DEPDIR)
	@: > contentscanners/$(DEPDIR)/$(am__dirstamp)
contentscanners/e2guardian-icapscan.$(OBJEXT):  \
	contentscanners/$(am__dirstamp) \
	contentscanners/$(DEPDIR)/$(am__dirstamp)
contentscanners/e2guardian-kavdscan.$(OBJEXT):  \
	contentscanners/$(am__dirstamp) \
	contentscanners/$(DEPDIR)/$(am__dirstamp)
contentscanners/e2guardian-clamdscan.$(OBJEXT):  \
	contentscanners/$(am__dirstamp) \
	contentscanners/$(DEPDIR)/$(am__dirstamp)
contentscanners/e2guardian-avastdscan.$(OBJEXT):  \
	contentscanners/$(am__dirstamp) \
	contentscanners/$(DEPDIR)/$(am__dirstamp)
contentscanners/e2guardian-commandlinescan.$(OBJEXT):  \
	contentscanners/$(am__dirstamp) \
	contentscanners/$(DEPDIR)/$(am__dirstamp)
downloadmanagers/$(am__dirstamp):
	@$(mkdir_p) downloadmanagers
	@: > downloadmanagers/$(am__dirstamp)
downloadmanagers/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) downloadmanagers/$(DEPDIR)
	@: > downloadmanagers/$(DEPDIR)/$(am__dirstamp)
downloadmanagers/e2guardian-default.$(OBJEXT):  \
	downloadmanagers/$(am__dirstamp) \
	downloadmanagers/$(DEPDIR)/$(am__dirstamp)
downloadmanagers/e2guardian-fancy.$(OBJEXT):  \
	downloadmanagers/$(am__dirstamp) \
	downloadmanagers/$(DEPDIR)/$(am__dirstamp)
downloadmanagers/e2guardian-trickle.$(OBJEXT):  \
	downloadmanagers/$(am__dirstamp) \
	downloadmanagers/$(DEPDIR)/$(am__dirstamp)
authplugins/$(am__dirstamp):
	@$(mkdir_p) authplugins
	@: > authplugins/$(am__dirstamp)
authplugins/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) authplugins/$(DEPDIR)
	@: > authplugins/$(DEPDIR)/$(am__dirstamp)
authplugins/e2guardian-proxy.$(OBJEXT): authplugins/$(am__dirstamp) \
	authplugins/$(DEPDIR)/$(am__dirstamp)
authplugins/e2guardian-ident.$(OBJEXT): authplugins/$(am__dirstamp) \
	authplugins/$(DEPDIR)/$(am__dirstamp)
authplugins/e2guardian-ip.$(OBJEXT): authplugins/$(am__dirstamp) \
	authplugins/$(DEPDIR)/$(am__dirstamp)
authplugins/e2guardian-dnsauth.$(OBJEXT): authplugins/$(am__dirstamp) \
	authplugins/$(DEPDIR)/$(am__dirstamp)
authplugins/e2guardian-port.$(OBJEXT): authplugins/$(am__dirstamp) \
	authplugins/$(DEPDIR)/$(am__dirstamp)
authplugins/e2guardian-ntlm.$(OBJEXT): authplugins/$(am__dirstamp) \
	authplugins/$(DEPDIR)/$(am__dirstamp)
authplugins/e2guardian-digest.$(OBJEXT): authplugins/$(am__dirstamp) \
	authplugins/$(DEPDIR)/$(am__dirstamp)
e2guardian$(EXEEXT): $(e2guardian_OBJECTS) $(e2guardian_DEPENDENCIES) 
	@rm -f e2guardian$(EXEEXT)
	$(CXXLINK) $(e2guardian_LDFLAGS) $(e2guardian_OBJECTS) $(e2guardian_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f authplugins/e2guardian-digest.$(OBJEXT)
	-rm -f authplugins/e2guardian-dnsauth.$(OBJEXT)
	-rm -f authplugins/e2guardian-ident.$(OBJEXT)
	-rm -f authplugins/e2guardian-ip.$(OBJEXT)
	-rm -f authplugins/e2guardian-ntlm.$(OBJEXT)
	-rm -f authplugins/e2guardian-port.$(OBJEXT)
	-rm -f authplugins/e2guardian-proxy.$(OBJEXT)
	-rm -f contentscanners/e2guardian-avastdscan.$(OBJEXT)
	-rm -f contentscanners/e2guardian-clamdscan.$(OBJEXT)
	-rm -f contentscanners/e2guardian-commandlinescan.$(OBJEXT)
	-rm -f contentscanners/e2guardian-icapscan.$(OBJEXT)
	-rm -f contentscanners/e2guardian-kavdscan.$(OBJEXT)
	-rm -f downloadmanagers/e2guardian-default.$(OBJEXT)
	-rm -f downloadmanagers/e2guardian-fancy.$(OBJEXT)
	-rm -f downloadmanagers/e2guardian-trickle.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/e2guardian-Auth.Po
include ./$(DEPDIR)/e2guardian-BackedStore.Po
include ./$(DEPDIR)/e2guardian-BaseSocket.Po
include ./$(DEPDIR)/e2guardian-CertificateAuthority.Po
include ./$(DEPDIR)/e2guardian-ConfigVar.Po
include ./$(DEPDIR)/e2guardian-ConnectionHandler.Po
include ./$(DEPDIR)/e2guardian-ContentScanner.Po
include ./$(DEPDIR)/e2guardian-DataBuffer.Po
include ./$(DEPDIR)/e2guardian-DownloadManager.Po
include ./$(DEPDIR)/e2guardian-DynamicIPList.Po
include ./$(DEPDIR)/e2guardian-DynamicURLList.Po
include ./$(DEPDIR)/e2guardian-FDFuncs.Po
include ./$(DEPDIR)/e2guardian-FDTunnel.Po
include ./$(DEPDIR)/e2guardian-FOptionContainer.Po
include ./$(DEPDIR)/e2guardian-FatController.Po
include ./$(DEPDIR)/e2guardian-HTMLTemplate.Po
include ./$(DEPDIR)/e2guardian-HTTPHeader.Po
include ./$(DEPDIR)/e2guardian-IPList.Po
include ./$(DEPDIR)/e2guardian-ImageContainer.Po
include ./$(DEPDIR)/e2guardian-LanguageContainer.Po
include ./$(DEPDIR)/e2guardian-ListContainer.Po
include ./$(DEPDIR)/e2guardian-ListManager.Po
include ./$(DEPDIR)/e2guardian-NaughtyFilter.Po
include ./$(DEPDIR)/e2guardian-OptionContainer.Po
include ./$(DEPDIR)/e2guardian-LOptionContainer.Po
include ./$(DEPDIR)/e2guardian-RegExp.Po
include ./$(DEPDIR)/e2guardian-Socket.Po
include ./$(DEPDIR)/e2guardian-SocketArray.Po
include ./$(DEPDIR)/e2guardian-String.Po
include ./$(DEPDIR)/e2guardian-SysV.Po
include ./$(DEPDIR)/e2guardian-UDSocket.Po
include ./$(DEPDIR)/e2guardian-e2guardian.Po
include ./$(DEPDIR)/e2guardian-md5.Po
include authplugins/$(DEPDIR)/e2guardian-digest.Po
include authplugins/$(DEPDIR)/e2guardian-dnsauth.Po
include authplugins/$(DEPDIR)/e2guardian-ident.Po
include authplugins/$(DEPDIR)/e2guardian-ip.Po
include authplugins/$(DEPDIR)/e2guardian-ntlm.Po
include authplugins/$(DEPDIR)/e2guardian-port.Po
include authplugins/$(DEPDIR)/e2guardian-proxy.Po
include contentscanners/$(DEPDIR)/e2guardian-avastdscan.Po
include contentscanners/$(DEPDIR)/e2guardian-clamdscan.Po
include contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Po
include contentscanners/$(DEPDIR)/e2guardian-icapscan.Po
include contentscanners/$(DEPDIR)/e2guardian-kavdscan.Po
include downloadmanagers/$(DEPDIR)/e2guardian-default.Po
include downloadmanagers/$(DEPDIR)/e2guardian-fancy.Po
include downloadmanagers/$(DEPDIR)/e2guardian-trickle.Po

.cpp.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`; \
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`; \
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

e2guardian-String.o: String.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-String.o -MD -MP -MF "$(DEPDIR)/e2guardian-String.Tpo" -c -o e2guardian-String.o `test -f 'String.cpp' || echo '$(srcdir)/'`String.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-String.Tpo" "$(DEPDIR)/e2guardian-String.Po"; else rm -f "$(DEPDIR)/e2guardian-String.Tpo"; exit 1; fi
#	source='String.cpp' object='e2guardian-String.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-String.o `test -f 'String.cpp' || echo '$(srcdir)/'`String.cpp

e2guardian-String.obj: String.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-String.obj -MD -MP -MF "$(DEPDIR)/e2guardian-String.Tpo" -c -o e2guardian-String.obj `if test -f 'String.cpp'; then $(CYGPATH_W) 'String.cpp'; else $(CYGPATH_W) '$(srcdir)/String.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-String.Tpo" "$(DEPDIR)/e2guardian-String.Po"; else rm -f "$(DEPDIR)/e2guardian-String.Tpo"; exit 1; fi
#	source='String.cpp' object='e2guardian-String.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-String.obj `if test -f 'String.cpp'; then $(CYGPATH_W) 'String.cpp'; else $(CYGPATH_W) '$(srcdir)/String.cpp'; fi`

e2guardian-FDTunnel.o: FDTunnel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FDTunnel.o -MD -MP -MF "$(DEPDIR)/e2guardian-FDTunnel.Tpo" -c -o e2guardian-FDTunnel.o `test -f 'FDTunnel.cpp' || echo '$(srcdir)/'`FDTunnel.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-FDTunnel.Tpo" "$(DEPDIR)/e2guardian-FDTunnel.Po"; else rm -f "$(DEPDIR)/e2guardian-FDTunnel.Tpo"; exit 1; fi
#	source='FDTunnel.cpp' object='e2guardian-FDTunnel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FDTunnel.o `test -f 'FDTunnel.cpp' || echo '$(srcdir)/'`FDTunnel.cpp

e2guardian-FDTunnel.obj: FDTunnel.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FDTunnel.obj -MD -MP -MF "$(DEPDIR)/e2guardian-FDTunnel.Tpo" -c -o e2guardian-FDTunnel.obj `if test -f 'FDTunnel.cpp'; then $(CYGPATH_W) 'FDTunnel.cpp'; else $(CYGPATH_W) '$(srcdir)/FDTunnel.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-FDTunnel.Tpo" "$(DEPDIR)/e2guardian-FDTunnel.Po"; else rm -f "$(DEPDIR)/e2guardian-FDTunnel.Tpo"; exit 1; fi
#	source='FDTunnel.cpp' object='e2guardian-FDTunnel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FDTunnel.obj `if test -f 'FDTunnel.cpp'; then $(CYGPATH_W) 'FDTunnel.cpp'; else $(CYGPATH_W) '$(srcdir)/FDTunnel.cpp'; fi`

e2guardian-ConnectionHandler.o: ConnectionHandler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ConnectionHandler.o -MD -MP -MF "$(DEPDIR)/e2guardian-ConnectionHandler.Tpo" -c -o e2guardian-ConnectionHandler.o `test -f 'ConnectionHandler.cpp' || echo '$(srcdir)/'`ConnectionHandler.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-ConnectionHandler.Tpo" "$(DEPDIR)/e2guardian-ConnectionHandler.Po"; else rm -f "$(DEPDIR)/e2guardian-ConnectionHandler.Tpo"; exit 1; fi
#	source='ConnectionHandler.cpp' object='e2guardian-ConnectionHandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ConnectionHandler.o `test -f 'ConnectionHandler.cpp' || echo '$(srcdir)/'`ConnectionHandler.cpp

e2guardian-ConnectionHandler.obj: ConnectionHandler.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ConnectionHandler.obj -MD -MP -MF "$(DEPDIR)/e2guardian-ConnectionHandler.Tpo" -c -o e2guardian-ConnectionHandler.obj `if test -f 'ConnectionHandler.cpp'; then $(CYGPATH_W) 'ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionHandler.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-ConnectionHandler.Tpo" "$(DEPDIR)/e2guardian-ConnectionHandler.Po"; else rm -f "$(DEPDIR)/e2guardian-ConnectionHandler.Tpo"; exit 1; fi
#	source='ConnectionHandler.cpp' object='e2guardian-ConnectionHandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ConnectionHandler.obj `if test -f 'ConnectionHandler.cpp'; then $(CYGPATH_W) 'ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionHandler.cpp'; fi`

e2guardian-DataBuffer.o: DataBuffer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DataBuffer.o -MD -MP -MF "$(DEPDIR)/e2guardian-DataBuffer.Tpo" -c -o e2guardian-DataBuffer.o `test -f 'DataBuffer.cpp' || echo '$(srcdir)/'`DataBuffer.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-DataBuffer.Tpo" "$(DEPDIR)/e2guardian-DataBuffer.Po"; else rm -f "$(DEPDIR)/e2guardian-DataBuffer.Tpo"; exit 1; fi
#	source='DataBuffer.cpp' object='e2guardian-DataBuffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DataBuffer.o `test -f 'DataBuffer.cpp' || echo '$(srcdir)/'`DataBuffer.cpp

e2guardian-DataBuffer.obj: DataBuffer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DataBuffer.obj -MD -MP -MF "$(DEPDIR)/e2guardian-DataBuffer.Tpo" -c -o e2guardian-DataBuffer.obj `if test -f 'DataBuffer.cpp'; then $(CYGPATH_W) 'DataBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/DataBuffer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-DataBuffer.Tpo" "$(DEPDIR)/e2guardian-DataBuffer.Po"; else rm -f "$(DEPDIR)/e2guardian-DataBuffer.Tpo"; exit 1; fi
#	source='DataBuffer.cpp' object='e2guardian-DataBuffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DataBuffer.obj `if test -f 'DataBuffer.cpp'; then $(CYGPATH_W) 'DataBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/DataBuffer.cpp'; fi`

e2guardian-HTTPHeader.o: HTTPHeader.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-HTTPHeader.o -MD -MP -MF "$(DEPDIR)/e2guardian-HTTPHeader.Tpo" -c -o e2guardian-HTTPHeader.o `test -f 'HTTPHeader.cpp' || echo '$(srcdir)/'`HTTPHeader.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-HTTPHeader.Tpo" "$(DEPDIR)/e2guardian-HTTPHeader.Po"; else rm -f "$(DEPDIR)/e2guardian-HTTPHeader.Tpo"; exit 1; fi
#	source='HTTPHeader.cpp' object='e2guardian-HTTPHeader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-HTTPHeader.o `test -f 'HTTPHeader.cpp' || echo '$(srcdir)/'`HTTPHeader.cpp

e2guardian-HTTPHeader.obj: HTTPHeader.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-HTTPHeader.obj -MD -MP -MF "$(DEPDIR)/e2guardian-HTTPHeader.Tpo" -c -o e2guardian-HTTPHeader.obj `if test -f 'HTTPHeader.cpp'; then $(CYGPATH_W) 'HTTPHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/HTTPHeader.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-HTTPHeader.Tpo" "$(DEPDIR)/e2guardian-HTTPHeader.Po"; else rm -f "$(DEPDIR)/e2guardian-HTTPHeader.Tpo"; exit 1; fi
#	source='HTTPHeader.cpp' object='e2guardian-HTTPHeader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-HTTPHeader.obj `if test -f 'HTTPHeader.cpp'; then $(CYGPATH_W) 'HTTPHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/HTTPHeader.cpp'; fi`

e2guardian-NaughtyFilter.o: NaughtyFilter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-NaughtyFilter.o -MD -MP -MF "$(DEPDIR)/e2guardian-NaughtyFilter.Tpo" -c -o e2guardian-NaughtyFilter.o `test -f 'NaughtyFilter.cpp' || echo '$(srcdir)/'`NaughtyFilter.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-NaughtyFilter.Tpo" "$(DEPDIR)/e2guardian-NaughtyFilter.Po"; else rm -f "$(DEPDIR)/e2guardian-NaughtyFilter.Tpo"; exit 1; fi
#	source='NaughtyFilter.cpp' object='e2guardian-NaughtyFilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-NaughtyFilter.o `test -f 'NaughtyFilter.cpp' || echo '$(srcdir)/'`NaughtyFilter.cpp

e2guardian-NaughtyFilter.obj: NaughtyFilter.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-NaughtyFilter.obj -MD -MP -MF "$(DEPDIR)/e2guardian-NaughtyFilter.Tpo" -c -o e2guardian-NaughtyFilter.obj `if test -f 'NaughtyFilter.cpp'; then $(CYGPATH_W) 'NaughtyFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/NaughtyFilter.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-NaughtyFilter.Tpo" "$(DEPDIR)/e2guardian-NaughtyFilter.Po"; else rm -f "$(DEPDIR)/e2guardian-NaughtyFilter.Tpo"; exit 1; fi
#	source='NaughtyFilter.cpp' object='e2guardian-NaughtyFilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-NaughtyFilter.obj `if test -f 'NaughtyFilter.cpp'; then $(CYGPATH_W) 'NaughtyFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/NaughtyFilter.cpp'; fi`

e2guardian-BackedStore.o: BackedStore.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-BackedStore.o -MD -MP -MF "$(DEPDIR)/e2guardian-BackedStore.Tpo" -c -o e2guardian-BackedStore.o `test -f 'BackedStore.cpp' || echo '$(srcdir)/'`BackedStore.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-BackedStore.Tpo" "$(DEPDIR)/e2guardian-BackedStore.Po"; else rm -f "$(DEPDIR)/e2guardian-BackedStore.Tpo"; exit 1; fi
#	source='BackedStore.cpp' object='e2guardian-BackedStore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-BackedStore.o `test -f 'BackedStore.cpp' || echo '$(srcdir)/'`BackedStore.cpp

e2guardian-BackedStore.obj: BackedStore.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-BackedStore.obj -MD -MP -MF "$(DEPDIR)/e2guardian-BackedStore.Tpo" -c -o e2guardian-BackedStore.obj `if test -f 'BackedStore.cpp'; then $(CYGPATH_W) 'BackedStore.cpp'; else $(CYGPATH_W) '$(srcdir)/BackedStore.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-BackedStore.Tpo" "$(DEPDIR)/e2guardian-BackedStore.Po"; else rm -f "$(DEPDIR)/e2guardian-BackedStore.Tpo"; exit 1; fi
#	source='BackedStore.cpp' object='e2guardian-BackedStore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-BackedStore.obj `if test -f 'BackedStore.cpp'; then $(CYGPATH_W) 'BackedStore.cpp'; else $(CYGPATH_W) '$(srcdir)/BackedStore.cpp'; fi`

e2guardian-RegExp.o: RegExp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-RegExp.o -MD -MP -MF "$(DEPDIR)/e2guardian-RegExp.Tpo" -c -o e2guardian-RegExp.o `test -f 'RegExp.cpp' || echo '$(srcdir)/'`RegExp.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-RegExp.Tpo" "$(DEPDIR)/e2guardian-RegExp.Po"; else rm -f "$(DEPDIR)/e2guardian-RegExp.Tpo"; exit 1; fi
#	source='RegExp.cpp' object='e2guardian-RegExp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-RegExp.o `test -f 'RegExp.cpp' || echo '$(srcdir)/'`RegExp.cpp

e2guardian-RegExp.obj: RegExp.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-RegExp.obj -MD -MP -MF "$(DEPDIR)/e2guardian-RegExp.Tpo" -c -o e2guardian-RegExp.obj `if test -f 'RegExp.cpp'; then $(CYGPATH_W) 'RegExp.cpp'; else $(CYGPATH_W) '$(srcdir)/RegExp.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-RegExp.Tpo" "$(DEPDIR)/e2guardian-RegExp.Po"; else rm -f "$(DEPDIR)/e2guardian-RegExp.Tpo"; exit 1; fi
#	source='RegExp.cpp' object='e2guardian-RegExp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-RegExp.obj `if test -f 'RegExp.cpp'; then $(CYGPATH_W) 'RegExp.cpp'; else $(CYGPATH_W) '$(srcdir)/RegExp.cpp'; fi`

e2guardian-FDFuncs.o: FDFuncs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FDFuncs.o -MD -MP -MF "$(DEPDIR)/e2guardian-FDFuncs.Tpo" -c -o e2guardian-FDFuncs.o `test -f 'FDFuncs.cpp' || echo '$(srcdir)/'`FDFuncs.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-FDFuncs.Tpo" "$(DEPDIR)/e2guardian-FDFuncs.Po"; else rm -f "$(DEPDIR)/e2guardian-FDFuncs.Tpo"; exit 1; fi
#	source='FDFuncs.cpp' object='e2guardian-FDFuncs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FDFuncs.o `test -f 'FDFuncs.cpp' || echo '$(srcdir)/'`FDFuncs.cpp

e2guardian-FDFuncs.obj: FDFuncs.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FDFuncs.obj -MD -MP -MF "$(DEPDIR)/e2guardian-FDFuncs.Tpo" -c -o e2guardian-FDFuncs.obj `if test -f 'FDFuncs.cpp'; then $(CYGPATH_W) 'FDFuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/FDFuncs.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-FDFuncs.Tpo" "$(DEPDIR)/e2guardian-FDFuncs.Po"; else rm -f "$(DEPDIR)/e2guardian-FDFuncs.Tpo"; exit 1; fi
#	source='FDFuncs.cpp' object='e2guardian-FDFuncs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FDFuncs.obj `if test -f 'FDFuncs.cpp'; then $(CYGPATH_W) 'FDFuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/FDFuncs.cpp'; fi`

e2guardian-BaseSocket.o: BaseSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-BaseSocket.o -MD -MP -MF "$(DEPDIR)/e2guardian-BaseSocket.Tpo" -c -o e2guardian-BaseSocket.o `test -f 'BaseSocket.cpp' || echo '$(srcdir)/'`BaseSocket.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-BaseSocket.Tpo" "$(DEPDIR)/e2guardian-BaseSocket.Po"; else rm -f "$(DEPDIR)/e2guardian-BaseSocket.Tpo"; exit 1; fi
#	source='BaseSocket.cpp' object='e2guardian-BaseSocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-BaseSocket.o `test -f 'BaseSocket.cpp' || echo '$(srcdir)/'`BaseSocket.cpp

e2guardian-BaseSocket.obj: BaseSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-BaseSocket.obj -MD -MP -MF "$(DEPDIR)/e2guardian-BaseSocket.Tpo" -c -o e2guardian-BaseSocket.obj `if test -f 'BaseSocket.cpp'; then $(CYGPATH_W) 'BaseSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseSocket.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-BaseSocket.Tpo" "$(DEPDIR)/e2guardian-BaseSocket.Po"; else rm -f "$(DEPDIR)/e2guardian-BaseSocket.Tpo"; exit 1; fi
#	source='BaseSocket.cpp' object='e2guardian-BaseSocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-BaseSocket.obj `if test -f 'BaseSocket.cpp'; then $(CYGPATH_W) 'BaseSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseSocket.cpp'; fi`

e2guardian-Socket.o: Socket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-Socket.o -MD -MP -MF "$(DEPDIR)/e2guardian-Socket.Tpo" -c -o e2guardian-Socket.o `test -f 'Socket.cpp' || echo '$(srcdir)/'`Socket.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-Socket.Tpo" "$(DEPDIR)/e2guardian-Socket.Po"; else rm -f "$(DEPDIR)/e2guardian-Socket.Tpo"; exit 1; fi
#	source='Socket.cpp' object='e2guardian-Socket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-Socket.o `test -f 'Socket.cpp' || echo '$(srcdir)/'`Socket.cpp

e2guardian-Socket.obj: Socket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-Socket.obj -MD -MP -MF "$(DEPDIR)/e2guardian-Socket.Tpo" -c -o e2guardian-Socket.obj `if test -f 'Socket.cpp'; then $(CYGPATH_W) 'Socket.cpp'; else $(CYGPATH_W) '$(srcdir)/Socket.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-Socket.Tpo" "$(DEPDIR)/e2guardian-Socket.Po"; else rm -f "$(DEPDIR)/e2guardian-Socket.Tpo"; exit 1; fi
#	source='Socket.cpp' object='e2guardian-Socket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-Socket.obj `if test -f 'Socket.cpp'; then $(CYGPATH_W) 'Socket.cpp'; else $(CYGPATH_W) '$(srcdir)/Socket.cpp'; fi`

e2guardian-FatController.o: FatController.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FatController.o -MD -MP -MF "$(DEPDIR)/e2guardian-FatController.Tpo" -c -o e2guardian-FatController.o `test -f 'FatController.cpp' || echo '$(srcdir)/'`FatController.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-FatController.Tpo" "$(DEPDIR)/e2guardian-FatController.Po"; else rm -f "$(DEPDIR)/e2guardian-FatController.Tpo"; exit 1; fi
#	source='FatController.cpp' object='e2guardian-FatController.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FatController.o `test -f 'FatController.cpp' || echo '$(srcdir)/'`FatController.cpp

e2guardian-FatController.obj: FatController.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FatController.obj -MD -MP -MF "$(DEPDIR)/e2guardian-FatController.Tpo" -c -o e2guardian-FatController.obj `if test -f 'FatController.cpp'; then $(CYGPATH_W) 'FatController.cpp'; else $(CYGPATH_W) '$(srcdir)/FatController.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-FatController.Tpo" "$(DEPDIR)/e2guardian-FatController.Po"; else rm -f "$(DEPDIR)/e2guardian-FatController.Tpo"; exit 1; fi
#	source='FatController.cpp' object='e2guardian-FatController.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FatController.obj `if test -f 'FatController.cpp'; then $(CYGPATH_W) 'FatController.cpp'; else $(CYGPATH_W) '$(srcdir)/FatController.cpp'; fi`

e2guardian-UDSocket.o: UDSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-UDSocket.o -MD -MP -MF "$(DEPDIR)/e2guardian-UDSocket.Tpo" -c -o e2guardian-UDSocket.o `test -f 'UDSocket.cpp' || echo '$(srcdir)/'`UDSocket.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-UDSocket.Tpo" "$(DEPDIR)/e2guardian-UDSocket.Po"; else rm -f "$(DEPDIR)/e2guardian-UDSocket.Tpo"; exit 1; fi
#	source='UDSocket.cpp' object='e2guardian-UDSocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-UDSocket.o `test -f 'UDSocket.cpp' || echo '$(srcdir)/'`UDSocket.cpp

e2guardian-UDSocket.obj: UDSocket.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-UDSocket.obj -MD -MP -MF "$(DEPDIR)/e2guardian-UDSocket.Tpo" -c -o e2guardian-UDSocket.obj `if test -f 'UDSocket.cpp'; then $(CYGPATH_W) 'UDSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UDSocket.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-UDSocket.Tpo" "$(DEPDIR)/e2guardian-UDSocket.Po"; else rm -f "$(DEPDIR)/e2guardian-UDSocket.Tpo"; exit 1; fi
#	source='UDSocket.cpp' object='e2guardian-UDSocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-UDSocket.obj `if test -f 'UDSocket.cpp'; then $(CYGPATH_W) 'UDSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UDSocket.cpp'; fi`

e2guardian-SysV.o: SysV.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-SysV.o -MD -MP -MF "$(DEPDIR)/e2guardian-SysV.Tpo" -c -o e2guardian-SysV.o `test -f 'SysV.cpp' || echo '$(srcdir)/'`SysV.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-SysV.Tpo" "$(DEPDIR)/e2guardian-SysV.Po"; else rm -f "$(DEPDIR)/e2guardian-SysV.Tpo"; exit 1; fi
#	source='SysV.cpp' object='e2guardian-SysV.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-SysV.o `test -f 'SysV.cpp' || echo '$(srcdir)/'`SysV.cpp

e2guardian-SysV.obj: SysV.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-SysV.obj -MD -MP -MF "$(DEPDIR)/e2guardian-SysV.Tpo" -c -o e2guardian-SysV.obj `if test -f 'SysV.cpp'; then $(CYGPATH_W) 'SysV.cpp'; else $(CYGPATH_W) '$(srcdir)/SysV.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-SysV.Tpo" "$(DEPDIR)/e2guardian-SysV.Po"; else rm -f "$(DEPDIR)/e2guardian-SysV.Tpo"; exit 1; fi
#	source='SysV.cpp' object='e2guardian-SysV.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-SysV.obj `if test -f 'SysV.cpp'; then $(CYGPATH_W) 'SysV.cpp'; else $(CYGPATH_W) '$(srcdir)/SysV.cpp'; fi`

e2guardian-ListContainer.o: ListContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ListContainer.o -MD -MP -MF "$(DEPDIR)/e2guardian-ListContainer.Tpo" -c -o e2guardian-ListContainer.o `test -f 'ListContainer.cpp' || echo '$(srcdir)/'`ListContainer.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-ListContainer.Tpo" "$(DEPDIR)/e2guardian-ListContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-ListContainer.Tpo"; exit 1; fi
#	source='ListContainer.cpp' object='e2guardian-ListContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ListContainer.o `test -f 'ListContainer.cpp' || echo '$(srcdir)/'`ListContainer.cpp

e2guardian-ListContainer.obj: ListContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ListContainer.obj -MD -MP -MF "$(DEPDIR)/e2guardian-ListContainer.Tpo" -c -o e2guardian-ListContainer.obj `if test -f 'ListContainer.cpp'; then $(CYGPATH_W) 'ListContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ListContainer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-ListContainer.Tpo" "$(DEPDIR)/e2guardian-ListContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-ListContainer.Tpo"; exit 1; fi
#	source='ListContainer.cpp' object='e2guardian-ListContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ListContainer.obj `if test -f 'ListContainer.cpp'; then $(CYGPATH_W) 'ListContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ListContainer.cpp'; fi`

e2guardian-Auth.o: Auth.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-Auth.o -MD -MP -MF "$(DEPDIR)/e2guardian-Auth.Tpo" -c -o e2guardian-Auth.o `test -f 'Auth.cpp' || echo '$(srcdir)/'`Auth.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-Auth.Tpo" "$(DEPDIR)/e2guardian-Auth.Po"; else rm -f "$(DEPDIR)/e2guardian-Auth.Tpo"; exit 1; fi
#	source='Auth.cpp' object='e2guardian-Auth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-Auth.o `test -f 'Auth.cpp' || echo '$(srcdir)/'`Auth.cpp

e2guardian-Auth.obj: Auth.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-Auth.obj -MD -MP -MF "$(DEPDIR)/e2guardian-Auth.Tpo" -c -o e2guardian-Auth.obj `if test -f 'Auth.cpp'; then $(CYGPATH_W) 'Auth.cpp'; else $(CYGPATH_W) '$(srcdir)/Auth.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-Auth.Tpo" "$(DEPDIR)/e2guardian-Auth.Po"; else rm -f "$(DEPDIR)/e2guardian-Auth.Tpo"; exit 1; fi
#	source='Auth.cpp' object='e2guardian-Auth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-Auth.obj `if test -f 'Auth.cpp'; then $(CYGPATH_W) 'Auth.cpp'; else $(CYGPATH_W) '$(srcdir)/Auth.cpp'; fi`

e2guardian-HTMLTemplate.o: HTMLTemplate.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-HTMLTemplate.o -MD -MP -MF "$(DEPDIR)/e2guardian-HTMLTemplate.Tpo" -c -o e2guardian-HTMLTemplate.o `test -f 'HTMLTemplate.cpp' || echo '$(srcdir)/'`HTMLTemplate.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-HTMLTemplate.Tpo" "$(DEPDIR)/e2guardian-HTMLTemplate.Po"; else rm -f "$(DEPDIR)/e2guardian-HTMLTemplate.Tpo"; exit 1; fi
#	source='HTMLTemplate.cpp' object='e2guardian-HTMLTemplate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-HTMLTemplate.o `test -f 'HTMLTemplate.cpp' || echo '$(srcdir)/'`HTMLTemplate.cpp

e2guardian-HTMLTemplate.obj: HTMLTemplate.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-HTMLTemplate.obj -MD -MP -MF "$(DEPDIR)/e2guardian-HTMLTemplate.Tpo" -c -o e2guardian-HTMLTemplate.obj `if test -f 'HTMLTemplate.cpp'; then $(CYGPATH_W) 'HTMLTemplate.cpp'; else $(CYGPATH_W) '$(srcdir)/HTMLTemplate.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-HTMLTemplate.Tpo" "$(DEPDIR)/e2guardian-HTMLTemplate.Po"; else rm -f "$(DEPDIR)/e2guardian-HTMLTemplate.Tpo"; exit 1; fi
#	source='HTMLTemplate.cpp' object='e2guardian-HTMLTemplate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-HTMLTemplate.obj `if test -f 'HTMLTemplate.cpp'; then $(CYGPATH_W) 'HTMLTemplate.cpp'; else $(CYGPATH_W) '$(srcdir)/HTMLTemplate.cpp'; fi`

e2guardian-LanguageContainer.o: LanguageContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-LanguageContainer.o -MD -MP -MF "$(DEPDIR)/e2guardian-LanguageContainer.Tpo" -c -o e2guardian-LanguageContainer.o `test -f 'LanguageContainer.cpp' || echo '$(srcdir)/'`LanguageContainer.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-LanguageContainer.Tpo" "$(DEPDIR)/e2guardian-LanguageContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-LanguageContainer.Tpo"; exit 1; fi
#	source='LanguageContainer.cpp' object='e2guardian-LanguageContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-LanguageContainer.o `test -f 'LanguageContainer.cpp' || echo '$(srcdir)/'`LanguageContainer.cpp

e2guardian-LanguageContainer.obj: LanguageContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-LanguageContainer.obj -MD -MP -MF "$(DEPDIR)/e2guardian-LanguageContainer.Tpo" -c -o e2guardian-LanguageContainer.obj `if test -f 'LanguageContainer.cpp'; then $(CYGPATH_W) 'LanguageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/LanguageContainer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-LanguageContainer.Tpo" "$(DEPDIR)/e2guardian-LanguageContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-LanguageContainer.Tpo"; exit 1; fi
#	source='LanguageContainer.cpp' object='e2guardian-LanguageContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-LanguageContainer.obj `if test -f 'LanguageContainer.cpp'; then $(CYGPATH_W) 'LanguageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/LanguageContainer.cpp'; fi`

e2guardian-DynamicURLList.o: DynamicURLList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DynamicURLList.o -MD -MP -MF "$(DEPDIR)/e2guardian-DynamicURLList.Tpo" -c -o e2guardian-DynamicURLList.o `test -f 'DynamicURLList.cpp' || echo '$(srcdir)/'`DynamicURLList.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-DynamicURLList.Tpo" "$(DEPDIR)/e2guardian-DynamicURLList.Po"; else rm -f "$(DEPDIR)/e2guardian-DynamicURLList.Tpo"; exit 1; fi
#	source='DynamicURLList.cpp' object='e2guardian-DynamicURLList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DynamicURLList.o `test -f 'DynamicURLList.cpp' || echo '$(srcdir)/'`DynamicURLList.cpp

e2guardian-DynamicURLList.obj: DynamicURLList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DynamicURLList.obj -MD -MP -MF "$(DEPDIR)/e2guardian-DynamicURLList.Tpo" -c -o e2guardian-DynamicURLList.obj `if test -f 'DynamicURLList.cpp'; then $(CYGPATH_W) 'DynamicURLList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicURLList.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-DynamicURLList.Tpo" "$(DEPDIR)/e2guardian-DynamicURLList.Po"; else rm -f "$(DEPDIR)/e2guardian-DynamicURLList.Tpo"; exit 1; fi
#	source='DynamicURLList.cpp' object='e2guardian-DynamicURLList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DynamicURLList.obj `if test -f 'DynamicURLList.cpp'; then $(CYGPATH_W) 'DynamicURLList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicURLList.cpp'; fi`

e2guardian-DynamicIPList.o: DynamicIPList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DynamicIPList.o -MD -MP -MF "$(DEPDIR)/e2guardian-DynamicIPList.Tpo" -c -o e2guardian-DynamicIPList.o `test -f 'DynamicIPList.cpp' || echo '$(srcdir)/'`DynamicIPList.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-DynamicIPList.Tpo" "$(DEPDIR)/e2guardian-DynamicIPList.Po"; else rm -f "$(DEPDIR)/e2guardian-DynamicIPList.Tpo"; exit 1; fi
#	source='DynamicIPList.cpp' object='e2guardian-DynamicIPList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DynamicIPList.o `test -f 'DynamicIPList.cpp' || echo '$(srcdir)/'`DynamicIPList.cpp

e2guardian-DynamicIPList.obj: DynamicIPList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DynamicIPList.obj -MD -MP -MF "$(DEPDIR)/e2guardian-DynamicIPList.Tpo" -c -o e2guardian-DynamicIPList.obj `if test -f 'DynamicIPList.cpp'; then $(CYGPATH_W) 'DynamicIPList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicIPList.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-DynamicIPList.Tpo" "$(DEPDIR)/e2guardian-DynamicIPList.Po"; else rm -f "$(DEPDIR)/e2guardian-DynamicIPList.Tpo"; exit 1; fi
#	source='DynamicIPList.cpp' object='e2guardian-DynamicIPList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DynamicIPList.obj `if test -f 'DynamicIPList.cpp'; then $(CYGPATH_W) 'DynamicIPList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicIPList.cpp'; fi`

e2guardian-ImageContainer.o: ImageContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ImageContainer.o -MD -MP -MF "$(DEPDIR)/e2guardian-ImageContainer.Tpo" -c -o e2guardian-ImageContainer.o `test -f 'ImageContainer.cpp' || echo '$(srcdir)/'`ImageContainer.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-ImageContainer.Tpo" "$(DEPDIR)/e2guardian-ImageContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-ImageContainer.Tpo"; exit 1; fi
#	source='ImageContainer.cpp' object='e2guardian-ImageContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ImageContainer.o `test -f 'ImageContainer.cpp' || echo '$(srcdir)/'`ImageContainer.cpp

e2guardian-ImageContainer.obj: ImageContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ImageContainer.obj -MD -MP -MF "$(DEPDIR)/e2guardian-ImageContainer.Tpo" -c -o e2guardian-ImageContainer.obj `if test -f 'ImageContainer.cpp'; then $(CYGPATH_W) 'ImageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageContainer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-ImageContainer.Tpo" "$(DEPDIR)/e2guardian-ImageContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-ImageContainer.Tpo"; exit 1; fi
#	source='ImageContainer.cpp' object='e2guardian-ImageContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ImageContainer.obj `if test -f 'ImageContainer.cpp'; then $(CYGPATH_W) 'ImageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageContainer.cpp'; fi`

e2guardian-IPList.o: IPList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-IPList.o -MD -MP -MF "$(DEPDIR)/e2guardian-IPList.Tpo" -c -o e2guardian-IPList.o `test -f 'IPList.cpp' || echo '$(srcdir)/'`IPList.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-IPList.Tpo" "$(DEPDIR)/e2guardian-IPList.Po"; else rm -f "$(DEPDIR)/e2guardian-IPList.Tpo"; exit 1; fi
#	source='IPList.cpp' object='e2guardian-IPList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-IPList.o `test -f 'IPList.cpp' || echo '$(srcdir)/'`IPList.cpp

e2guardian-IPList.obj: IPList.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-IPList.obj -MD -MP -MF "$(DEPDIR)/e2guardian-IPList.Tpo" -c -o e2guardian-IPList.obj `if test -f 'IPList.cpp'; then $(CYGPATH_W) 'IPList.cpp'; else $(CYGPATH_W) '$(srcdir)/IPList.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-IPList.Tpo" "$(DEPDIR)/e2guardian-IPList.Po"; else rm -f "$(DEPDIR)/e2guardian-IPList.Tpo"; exit 1; fi
#	source='IPList.cpp' object='e2guardian-IPList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-IPList.obj `if test -f 'IPList.cpp'; then $(CYGPATH_W) 'IPList.cpp'; else $(CYGPATH_W) '$(srcdir)/IPList.cpp'; fi`

e2guardian-OptionContainer.o: OptionContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-OptionContainer.o -MD -MP -MF "$(DEPDIR)/e2guardian-OptionContainer.Tpo" -c -o e2guardian-OptionContainer.o `test -f 'OptionContainer.cpp' || echo '$(srcdir)/'`OptionContainer.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-OptionContainer.Tpo" "$(DEPDIR)/e2guardian-OptionContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-OptionContainer.Tpo"; exit 1; fi
#	source='OptionContainer.cpp' object='e2guardian-OptionContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-OptionContainer.o `test -f 'OptionContainer.cpp' || echo '$(srcdir)/'`OptionContainer.cpp

e2guardian-OptionContainer.obj: OptionContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-OptionContainer.obj -MD -MP -MF "$(DEPDIR)/e2guardian-OptionContainer.Tpo" -c -o e2guardian-OptionContainer.obj `if test -f 'OptionContainer.cpp'; then $(CYGPATH_W) 'OptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/OptionContainer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-OptionContainer.Tpo" "$(DEPDIR)/e2guardian-OptionContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-OptionContainer.Tpo"; exit 1; fi
#	source='OptionContainer.cpp' object='e2guardian-OptionContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-OptionContainer.obj `if test -f 'OptionContainer.cpp'; then $(CYGPATH_W) 'OptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/OptionContainer.cpp'; fi`

e2guardian-LOptionContainer.o: LOptionContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-LOptionContainer.o -MD -MP -MF "$(DEPDIR)/e2guardian-LOptionContainer.Tpo" -c -o e2guardian-LOptionContainer.o `test -f 'LOptionContainer.cpp' || echo '$(srcdir)/'`LOptionContainer.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-LOptionContainer.Tpo" "$(DEPDIR)/e2guardian-LOptionContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-LOptionContainer.Tpo"; exit 1; fi
#	source='LOptionContainer.cpp' object='e2guardian-LOptionContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-LOptionContainer.o `test -f 'LOptionContainer.cpp' || echo '$(srcdir)/'`LOptionContainer.cpp

e2guardian-LOptionContainer.obj: LOptionContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-LOptionContainer.obj -MD -MP -MF "$(DEPDIR)/e2guardian-LOptionContainer.Tpo" -c -o e2guardian-LOptionContainer.obj `if test -f 'LOptionContainer.cpp'; then $(CYGPATH_W) 'LOptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/LOptionContainer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-LOptionContainer.Tpo" "$(DEPDIR)/e2guardian-LOptionContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-LOptionContainer.Tpo"; exit 1; fi
#	source='LOptionContainer.cpp' object='e2guardian-LOptionContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-LOptionContainer.obj `if test -f 'LOptionContainer.cpp'; then $(CYGPATH_W) 'LOptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/LOptionContainer.cpp'; fi`

e2guardian-FOptionContainer.o: FOptionContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FOptionContainer.o -MD -MP -MF "$(DEPDIR)/e2guardian-FOptionContainer.Tpo" -c -o e2guardian-FOptionContainer.o `test -f 'FOptionContainer.cpp' || echo '$(srcdir)/'`FOptionContainer.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-FOptionContainer.Tpo" "$(DEPDIR)/e2guardian-FOptionContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-FOptionContainer.Tpo"; exit 1; fi
#	source='FOptionContainer.cpp' object='e2guardian-FOptionContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FOptionContainer.o `test -f 'FOptionContainer.cpp' || echo '$(srcdir)/'`FOptionContainer.cpp

e2guardian-FOptionContainer.obj: FOptionContainer.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-FOptionContainer.obj -MD -MP -MF "$(DEPDIR)/e2guardian-FOptionContainer.Tpo" -c -o e2guardian-FOptionContainer.obj `if test -f 'FOptionContainer.cpp'; then $(CYGPATH_W) 'FOptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/FOptionContainer.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-FOptionContainer.Tpo" "$(DEPDIR)/e2guardian-FOptionContainer.Po"; else rm -f "$(DEPDIR)/e2guardian-FOptionContainer.Tpo"; exit 1; fi
#	source='FOptionContainer.cpp' object='e2guardian-FOptionContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-FOptionContainer.obj `if test -f 'FOptionContainer.cpp'; then $(CYGPATH_W) 'FOptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/FOptionContainer.cpp'; fi`

e2guardian-ListManager.o: ListManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ListManager.o -MD -MP -MF "$(DEPDIR)/e2guardian-ListManager.Tpo" -c -o e2guardian-ListManager.o `test -f 'ListManager.cpp' || echo '$(srcdir)/'`ListManager.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-ListManager.Tpo" "$(DEPDIR)/e2guardian-ListManager.Po"; else rm -f "$(DEPDIR)/e2guardian-ListManager.Tpo"; exit 1; fi
#	source='ListManager.cpp' object='e2guardian-ListManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ListManager.o `test -f 'ListManager.cpp' || echo '$(srcdir)/'`ListManager.cpp

e2guardian-ListManager.obj: ListManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ListManager.obj -MD -MP -MF "$(DEPDIR)/e2guardian-ListManager.Tpo" -c -o e2guardian-ListManager.obj `if test -f 'ListManager.cpp'; then $(CYGPATH_W) 'ListManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ListManager.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-ListManager.Tpo" "$(DEPDIR)/e2guardian-ListManager.Po"; else rm -f "$(DEPDIR)/e2guardian-ListManager.Tpo"; exit 1; fi
#	source='ListManager.cpp' object='e2guardian-ListManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ListManager.obj `if test -f 'ListManager.cpp'; then $(CYGPATH_W) 'ListManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ListManager.cpp'; fi`

e2guardian-md5.o: md5.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-md5.o -MD -MP -MF "$(DEPDIR)/e2guardian-md5.Tpo" -c -o e2guardian-md5.o `test -f 'md5.cpp' || echo '$(srcdir)/'`md5.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-md5.Tpo" "$(DEPDIR)/e2guardian-md5.Po"; else rm -f "$(DEPDIR)/e2guardian-md5.Tpo"; exit 1; fi
#	source='md5.cpp' object='e2guardian-md5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-md5.o `test -f 'md5.cpp' || echo '$(srcdir)/'`md5.cpp

e2guardian-md5.obj: md5.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-md5.obj -MD -MP -MF "$(DEPDIR)/e2guardian-md5.Tpo" -c -o e2guardian-md5.obj `if test -f 'md5.cpp'; then $(CYGPATH_W) 'md5.cpp'; else $(CYGPATH_W) '$(srcdir)/md5.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-md5.Tpo" "$(DEPDIR)/e2guardian-md5.Po"; else rm -f "$(DEPDIR)/e2guardian-md5.Tpo"; exit 1; fi
#	source='md5.cpp' object='e2guardian-md5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-md5.obj `if test -f 'md5.cpp'; then $(CYGPATH_W) 'md5.cpp'; else $(CYGPATH_W) '$(srcdir)/md5.cpp'; fi`

e2guardian-DownloadManager.o: DownloadManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DownloadManager.o -MD -MP -MF "$(DEPDIR)/e2guardian-DownloadManager.Tpo" -c -o e2guardian-DownloadManager.o `test -f 'DownloadManager.cpp' || echo '$(srcdir)/'`DownloadManager.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-DownloadManager.Tpo" "$(DEPDIR)/e2guardian-DownloadManager.Po"; else rm -f "$(DEPDIR)/e2guardian-DownloadManager.Tpo"; exit 1; fi
#	source='DownloadManager.cpp' object='e2guardian-DownloadManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DownloadManager.o `test -f 'DownloadManager.cpp' || echo '$(srcdir)/'`DownloadManager.cpp

e2guardian-DownloadManager.obj: DownloadManager.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-DownloadManager.obj -MD -MP -MF "$(DEPDIR)/e2guardian-DownloadManager.Tpo" -c -o e2guardian-DownloadManager.obj `if test -f 'DownloadManager.cpp'; then $(CYGPATH_W) 'DownloadManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DownloadManager.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-DownloadManager.Tpo" "$(DEPDIR)/e2guardian-DownloadManager.Po"; else rm -f "$(DEPDIR)/e2guardian-DownloadManager.Tpo"; exit 1; fi
#	source='DownloadManager.cpp' object='e2guardian-DownloadManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-DownloadManager.obj `if test -f 'DownloadManager.cpp'; then $(CYGPATH_W) 'DownloadManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DownloadManager.cpp'; fi`

e2guardian-ConfigVar.o: ConfigVar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ConfigVar.o -MD -MP -MF "$(DEPDIR)/e2guardian-ConfigVar.Tpo" -c -o e2guardian-ConfigVar.o `test -f 'ConfigVar.cpp' || echo '$(srcdir)/'`ConfigVar.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-ConfigVar.Tpo" "$(DEPDIR)/e2guardian-ConfigVar.Po"; else rm -f "$(DEPDIR)/e2guardian-ConfigVar.Tpo"; exit 1; fi
#	source='ConfigVar.cpp' object='e2guardian-ConfigVar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ConfigVar.o `test -f 'ConfigVar.cpp' || echo '$(srcdir)/'`ConfigVar.cpp

e2guardian-ConfigVar.obj: ConfigVar.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ConfigVar.obj -MD -MP -MF "$(DEPDIR)/e2guardian-ConfigVar.Tpo" -c -o e2guardian-ConfigVar.obj `if test -f 'ConfigVar.cpp'; then $(CYGPATH_W) 'ConfigVar.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigVar.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-ConfigVar.Tpo" "$(DEPDIR)/e2guardian-ConfigVar.Po"; else rm -f "$(DEPDIR)/e2guardian-ConfigVar.Tpo"; exit 1; fi
#	source='ConfigVar.cpp' object='e2guardian-ConfigVar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ConfigVar.obj `if test -f 'ConfigVar.cpp'; then $(CYGPATH_W) 'ConfigVar.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigVar.cpp'; fi`

e2guardian-ContentScanner.o: ContentScanner.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ContentScanner.o -MD -MP -MF "$(DEPDIR)/e2guardian-ContentScanner.Tpo" -c -o e2guardian-ContentScanner.o `test -f 'ContentScanner.cpp' || echo '$(srcdir)/'`ContentScanner.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-ContentScanner.Tpo" "$(DEPDIR)/e2guardian-ContentScanner.Po"; else rm -f "$(DEPDIR)/e2guardian-ContentScanner.Tpo"; exit 1; fi
#	source='ContentScanner.cpp' object='e2guardian-ContentScanner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ContentScanner.o `test -f 'ContentScanner.cpp' || echo '$(srcdir)/'`ContentScanner.cpp

e2guardian-ContentScanner.obj: ContentScanner.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-ContentScanner.obj -MD -MP -MF "$(DEPDIR)/e2guardian-ContentScanner.Tpo" -c -o e2guardian-ContentScanner.obj `if test -f 'ContentScanner.cpp'; then $(CYGPATH_W) 'ContentScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/ContentScanner.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-ContentScanner.Tpo" "$(DEPDIR)/e2guardian-ContentScanner.Po"; else rm -f "$(DEPDIR)/e2guardian-ContentScanner.Tpo"; exit 1; fi
#	source='ContentScanner.cpp' object='e2guardian-ContentScanner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-ContentScanner.obj `if test -f 'ContentScanner.cpp'; then $(CYGPATH_W) 'ContentScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/ContentScanner.cpp'; fi`

e2guardian-SocketArray.o: SocketArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-SocketArray.o -MD -MP -MF "$(DEPDIR)/e2guardian-SocketArray.Tpo" -c -o e2guardian-SocketArray.o `test -f 'SocketArray.cpp' || echo '$(srcdir)/'`SocketArray.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-SocketArray.Tpo" "$(DEPDIR)/e2guardian-SocketArray.Po"; else rm -f "$(DEPDIR)/e2guardian-SocketArray.Tpo"; exit 1; fi
#	source='SocketArray.cpp' object='e2guardian-SocketArray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-SocketArray.o `test -f 'SocketArray.cpp' || echo '$(srcdir)/'`SocketArray.cpp

e2guardian-SocketArray.obj: SocketArray.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-SocketArray.obj -MD -MP -MF "$(DEPDIR)/e2guardian-SocketArray.Tpo" -c -o e2guardian-SocketArray.obj `if test -f 'SocketArray.cpp'; then $(CYGPATH_W) 'SocketArray.cpp'; else $(CYGPATH_W) '$(srcdir)/SocketArray.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-SocketArray.Tpo" "$(DEPDIR)/e2guardian-SocketArray.Po"; else rm -f "$(DEPDIR)/e2guardian-SocketArray.Tpo"; exit 1; fi
#	source='SocketArray.cpp' object='e2guardian-SocketArray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-SocketArray.obj `if test -f 'SocketArray.cpp'; then $(CYGPATH_W) 'SocketArray.cpp'; else $(CYGPATH_W) '$(srcdir)/SocketArray.cpp'; fi`

e2guardian-e2guardian.o: e2guardian.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-e2guardian.o -MD -MP -MF "$(DEPDIR)/e2guardian-e2guardian.Tpo" -c -o e2guardian-e2guardian.o `test -f 'e2guardian.cpp' || echo '$(srcdir)/'`e2guardian.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-e2guardian.Tpo" "$(DEPDIR)/e2guardian-e2guardian.Po"; else rm -f "$(DEPDIR)/e2guardian-e2guardian.Tpo"; exit 1; fi
#	source='e2guardian.cpp' object='e2guardian-e2guardian.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-e2guardian.o `test -f 'e2guardian.cpp' || echo '$(srcdir)/'`e2guardian.cpp

e2guardian-e2guardian.obj: e2guardian.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-e2guardian.obj -MD -MP -MF "$(DEPDIR)/e2guardian-e2guardian.Tpo" -c -o e2guardian-e2guardian.obj `if test -f 'e2guardian.cpp'; then $(CYGPATH_W) 'e2guardian.cpp'; else $(CYGPATH_W) '$(srcdir)/e2guardian.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-e2guardian.Tpo" "$(DEPDIR)/e2guardian-e2guardian.Po"; else rm -f "$(DEPDIR)/e2guardian-e2guardian.Tpo"; exit 1; fi
#	source='e2guardian.cpp' object='e2guardian-e2guardian.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-e2guardian.obj `if test -f 'e2guardian.cpp'; then $(CYGPATH_W) 'e2guardian.cpp'; else $(CYGPATH_W) '$(srcdir)/e2guardian.cpp'; fi`

e2guardian-CertificateAuthority.o: CertificateAuthority.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-CertificateAuthority.o -MD -MP -MF "$(DEPDIR)/e2guardian-CertificateAuthority.Tpo" -c -o e2guardian-CertificateAuthority.o `test -f 'CertificateAuthority.cpp' || echo '$(srcdir)/'`CertificateAuthority.cpp; \
	then mv -f "$(DEPDIR)/e2guardian-CertificateAuthority.Tpo" "$(DEPDIR)/e2guardian-CertificateAuthority.Po"; else rm -f "$(DEPDIR)/e2guardian-CertificateAuthority.Tpo"; exit 1; fi
#	source='CertificateAuthority.cpp' object='e2guardian-CertificateAuthority.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-CertificateAuthority.o `test -f 'CertificateAuthority.cpp' || echo '$(srcdir)/'`CertificateAuthority.cpp

e2guardian-CertificateAuthority.obj: CertificateAuthority.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT e2guardian-CertificateAuthority.obj -MD -MP -MF "$(DEPDIR)/e2guardian-CertificateAuthority.Tpo" -c -o e2guardian-CertificateAuthority.obj `if test -f 'CertificateAuthority.cpp'; then $(CYGPATH_W) 'CertificateAuthority.cpp'; else $(CYGPATH_W) '$(srcdir)/CertificateAuthority.cpp'; fi`; \
	then mv -f "$(DEPDIR)/e2guardian-CertificateAuthority.Tpo" "$(DEPDIR)/e2guardian-CertificateAuthority.Po"; else rm -f "$(DEPDIR)/e2guardian-CertificateAuthority.Tpo"; exit 1; fi
#	source='CertificateAuthority.cpp' object='e2guardian-CertificateAuthority.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o e2guardian-CertificateAuthority.obj `if test -f 'CertificateAuthority.cpp'; then $(CYGPATH_W) 'CertificateAuthority.cpp'; else $(CYGPATH_W) '$(srcdir)/CertificateAuthority.cpp'; fi`

contentscanners/e2guardian-icapscan.o: contentscanners/icapscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-icapscan.o -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-icapscan.Tpo" -c -o contentscanners/e2guardian-icapscan.o `test -f 'contentscanners/icapscan.cpp' || echo '$(srcdir)/'`contentscanners/icapscan.cpp; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-icapscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-icapscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-icapscan.Tpo"; exit 1; fi
#	source='contentscanners/icapscan.cpp' object='contentscanners/e2guardian-icapscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-icapscan.o `test -f 'contentscanners/icapscan.cpp' || echo '$(srcdir)/'`contentscanners/icapscan.cpp

contentscanners/e2guardian-icapscan.obj: contentscanners/icapscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-icapscan.obj -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-icapscan.Tpo" -c -o contentscanners/e2guardian-icapscan.obj `if test -f 'contentscanners/icapscan.cpp'; then $(CYGPATH_W) 'contentscanners/icapscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/icapscan.cpp'; fi`; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-icapscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-icapscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-icapscan.Tpo"; exit 1; fi
#	source='contentscanners/icapscan.cpp' object='contentscanners/e2guardian-icapscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-icapscan.obj `if test -f 'contentscanners/icapscan.cpp'; then $(CYGPATH_W) 'contentscanners/icapscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/icapscan.cpp'; fi`

contentscanners/e2guardian-kavdscan.o: contentscanners/kavdscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-kavdscan.o -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Tpo" -c -o contentscanners/e2guardian-kavdscan.o `test -f 'contentscanners/kavdscan.cpp' || echo '$(srcdir)/'`contentscanners/kavdscan.cpp; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Tpo"; exit 1; fi
#	source='contentscanners/kavdscan.cpp' object='contentscanners/e2guardian-kavdscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-kavdscan.o `test -f 'contentscanners/kavdscan.cpp' || echo '$(srcdir)/'`contentscanners/kavdscan.cpp

contentscanners/e2guardian-kavdscan.obj: contentscanners/kavdscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-kavdscan.obj -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Tpo" -c -o contentscanners/e2guardian-kavdscan.obj `if test -f 'contentscanners/kavdscan.cpp'; then $(CYGPATH_W) 'contentscanners/kavdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/kavdscan.cpp'; fi`; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-kavdscan.Tpo"; exit 1; fi
#	source='contentscanners/kavdscan.cpp' object='contentscanners/e2guardian-kavdscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-kavdscan.obj `if test -f 'contentscanners/kavdscan.cpp'; then $(CYGPATH_W) 'contentscanners/kavdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/kavdscan.cpp'; fi`

contentscanners/e2guardian-clamdscan.o: contentscanners/clamdscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-clamdscan.o -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Tpo" -c -o contentscanners/e2guardian-clamdscan.o `test -f 'contentscanners/clamdscan.cpp' || echo '$(srcdir)/'`contentscanners/clamdscan.cpp; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Tpo"; exit 1; fi
#	source='contentscanners/clamdscan.cpp' object='contentscanners/e2guardian-clamdscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-clamdscan.o `test -f 'contentscanners/clamdscan.cpp' || echo '$(srcdir)/'`contentscanners/clamdscan.cpp

contentscanners/e2guardian-clamdscan.obj: contentscanners/clamdscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-clamdscan.obj -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Tpo" -c -o contentscanners/e2guardian-clamdscan.obj `if test -f 'contentscanners/clamdscan.cpp'; then $(CYGPATH_W) 'contentscanners/clamdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/clamdscan.cpp'; fi`; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-clamdscan.Tpo"; exit 1; fi
#	source='contentscanners/clamdscan.cpp' object='contentscanners/e2guardian-clamdscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-clamdscan.obj `if test -f 'contentscanners/clamdscan.cpp'; then $(CYGPATH_W) 'contentscanners/clamdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/clamdscan.cpp'; fi`

contentscanners/e2guardian-avastdscan.o: contentscanners/avastdscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-avastdscan.o -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Tpo" -c -o contentscanners/e2guardian-avastdscan.o `test -f 'contentscanners/avastdscan.cpp' || echo '$(srcdir)/'`contentscanners/avastdscan.cpp; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Tpo"; exit 1; fi
#	source='contentscanners/avastdscan.cpp' object='contentscanners/e2guardian-avastdscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-avastdscan.o `test -f 'contentscanners/avastdscan.cpp' || echo '$(srcdir)/'`contentscanners/avastdscan.cpp

contentscanners/e2guardian-avastdscan.obj: contentscanners/avastdscan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-avastdscan.obj -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Tpo" -c -o contentscanners/e2guardian-avastdscan.obj `if test -f 'contentscanners/avastdscan.cpp'; then $(CYGPATH_W) 'contentscanners/avastdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/avastdscan.cpp'; fi`; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-avastdscan.Tpo"; exit 1; fi
#	source='contentscanners/avastdscan.cpp' object='contentscanners/e2guardian-avastdscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-avastdscan.obj `if test -f 'contentscanners/avastdscan.cpp'; then $(CYGPATH_W) 'contentscanners/avastdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/avastdscan.cpp'; fi`

contentscanners/e2guardian-commandlinescan.o: contentscanners/commandlinescan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-commandlinescan.o -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Tpo" -c -o contentscanners/e2guardian-commandlinescan.o `test -f 'contentscanners/commandlinescan.cpp' || echo '$(srcdir)/'`contentscanners/commandlinescan.cpp; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Tpo"; exit 1; fi
#	source='contentscanners/commandlinescan.cpp' object='contentscanners/e2guardian-commandlinescan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-commandlinescan.o `test -f 'contentscanners/commandlinescan.cpp' || echo '$(srcdir)/'`contentscanners/commandlinescan.cpp

contentscanners/e2guardian-commandlinescan.obj: contentscanners/commandlinescan.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT contentscanners/e2guardian-commandlinescan.obj -MD -MP -MF "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Tpo" -c -o contentscanners/e2guardian-commandlinescan.obj `if test -f 'contentscanners/commandlinescan.cpp'; then $(CYGPATH_W) 'contentscanners/commandlinescan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/commandlinescan.cpp'; fi`; \
	then mv -f "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Tpo" "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Po"; else rm -f "contentscanners/$(DEPDIR)/e2guardian-commandlinescan.Tpo"; exit 1; fi
#	source='contentscanners/commandlinescan.cpp' object='contentscanners/e2guardian-commandlinescan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o contentscanners/e2guardian-commandlinescan.obj `if test -f 'contentscanners/commandlinescan.cpp'; then $(CYGPATH_W) 'contentscanners/commandlinescan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/commandlinescan.cpp'; fi`

downloadmanagers/e2guardian-default.o: downloadmanagers/default.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT downloadmanagers/e2guardian-default.o -MD -MP -MF "downloadmanagers/$(DEPDIR)/e2guardian-default.Tpo" -c -o downloadmanagers/e2guardian-default.o `test -f 'downloadmanagers/default.cpp' || echo '$(srcdir)/'`downloadmanagers/default.cpp; \
	then mv -f "downloadmanagers/$(DEPDIR)/e2guardian-default.Tpo" "downloadmanagers/$(DEPDIR)/e2guardian-default.Po"; else rm -f "downloadmanagers/$(DEPDIR)/e2guardian-default.Tpo"; exit 1; fi
#	source='downloadmanagers/default.cpp' object='downloadmanagers/e2guardian-default.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o downloadmanagers/e2guardian-default.o `test -f 'downloadmanagers/default.cpp' || echo '$(srcdir)/'`downloadmanagers/default.cpp

downloadmanagers/e2guardian-default.obj: downloadmanagers/default.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT downloadmanagers/e2guardian-default.obj -MD -MP -MF "downloadmanagers/$(DEPDIR)/e2guardian-default.Tpo" -c -o downloadmanagers/e2guardian-default.obj `if test -f 'downloadmanagers/default.cpp'; then $(CYGPATH_W) 'downloadmanagers/default.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/default.cpp'; fi`; \
	then mv -f "downloadmanagers/$(DEPDIR)/e2guardian-default.Tpo" "downloadmanagers/$(DEPDIR)/e2guardian-default.Po"; else rm -f "downloadmanagers/$(DEPDIR)/e2guardian-default.Tpo"; exit 1; fi
#	source='downloadmanagers/default.cpp' object='downloadmanagers/e2guardian-default.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o downloadmanagers/e2guardian-default.obj `if test -f 'downloadmanagers/default.cpp'; then $(CYGPATH_W) 'downloadmanagers/default.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/default.cpp'; fi`

downloadmanagers/e2guardian-fancy.o: downloadmanagers/fancy.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT downloadmanagers/e2guardian-fancy.o -MD -MP -MF "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Tpo" -c -o downloadmanagers/e2guardian-fancy.o `test -f 'downloadmanagers/fancy.cpp' || echo '$(srcdir)/'`downloadmanagers/fancy.cpp; \
	then mv -f "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Tpo" "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Po"; else rm -f "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Tpo"; exit 1; fi
#	source='downloadmanagers/fancy.cpp' object='downloadmanagers/e2guardian-fancy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o downloadmanagers/e2guardian-fancy.o `test -f 'downloadmanagers/fancy.cpp' || echo '$(srcdir)/'`downloadmanagers/fancy.cpp

downloadmanagers/e2guardian-fancy.obj: downloadmanagers/fancy.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT downloadmanagers/e2guardian-fancy.obj -MD -MP -MF "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Tpo" -c -o downloadmanagers/e2guardian-fancy.obj `if test -f 'downloadmanagers/fancy.cpp'; then $(CYGPATH_W) 'downloadmanagers/fancy.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/fancy.cpp'; fi`; \
	then mv -f "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Tpo" "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Po"; else rm -f "downloadmanagers/$(DEPDIR)/e2guardian-fancy.Tpo"; exit 1; fi
#	source='downloadmanagers/fancy.cpp' object='downloadmanagers/e2guardian-fancy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o downloadmanagers/e2guardian-fancy.obj `if test -f 'downloadmanagers/fancy.cpp'; then $(CYGPATH_W) 'downloadmanagers/fancy.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/fancy.cpp'; fi`

downloadmanagers/e2guardian-trickle.o: downloadmanagers/trickle.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT downloadmanagers/e2guardian-trickle.o -MD -MP -MF "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Tpo" -c -o downloadmanagers/e2guardian-trickle.o `test -f 'downloadmanagers/trickle.cpp' || echo '$(srcdir)/'`downloadmanagers/trickle.cpp; \
	then mv -f "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Tpo" "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Po"; else rm -f "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Tpo"; exit 1; fi
#	source='downloadmanagers/trickle.cpp' object='downloadmanagers/e2guardian-trickle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o downloadmanagers/e2guardian-trickle.o `test -f 'downloadmanagers/trickle.cpp' || echo '$(srcdir)/'`downloadmanagers/trickle.cpp

downloadmanagers/e2guardian-trickle.obj: downloadmanagers/trickle.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT downloadmanagers/e2guardian-trickle.obj -MD -MP -MF "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Tpo" -c -o downloadmanagers/e2guardian-trickle.obj `if test -f 'downloadmanagers/trickle.cpp'; then $(CYGPATH_W) 'downloadmanagers/trickle.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/trickle.cpp'; fi`; \
	then mv -f "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Tpo" "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Po"; else rm -f "downloadmanagers/$(DEPDIR)/e2guardian-trickle.Tpo"; exit 1; fi
#	source='downloadmanagers/trickle.cpp' object='downloadmanagers/e2guardian-trickle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o downloadmanagers/e2guardian-trickle.obj `if test -f 'downloadmanagers/trickle.cpp'; then $(CYGPATH_W) 'downloadmanagers/trickle.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/trickle.cpp'; fi`

authplugins/e2guardian-proxy.o: authplugins/proxy.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-proxy.o -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-proxy.Tpo" -c -o authplugins/e2guardian-proxy.o `test -f 'authplugins/proxy.cpp' || echo '$(srcdir)/'`authplugins/proxy.cpp; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-proxy.Tpo" "authplugins/$(DEPDIR)/e2guardian-proxy.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-proxy.Tpo"; exit 1; fi
#	source='authplugins/proxy.cpp' object='authplugins/e2guardian-proxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-proxy.o `test -f 'authplugins/proxy.cpp' || echo '$(srcdir)/'`authplugins/proxy.cpp

authplugins/e2guardian-proxy.obj: authplugins/proxy.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-proxy.obj -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-proxy.Tpo" -c -o authplugins/e2guardian-proxy.obj `if test -f 'authplugins/proxy.cpp'; then $(CYGPATH_W) 'authplugins/proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/proxy.cpp'; fi`; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-proxy.Tpo" "authplugins/$(DEPDIR)/e2guardian-proxy.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-proxy.Tpo"; exit 1; fi
#	source='authplugins/proxy.cpp' object='authplugins/e2guardian-proxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-proxy.obj `if test -f 'authplugins/proxy.cpp'; then $(CYGPATH_W) 'authplugins/proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/proxy.cpp'; fi`

authplugins/e2guardian-ident.o: authplugins/ident.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-ident.o -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-ident.Tpo" -c -o authplugins/e2guardian-ident.o `test -f 'authplugins/ident.cpp' || echo '$(srcdir)/'`authplugins/ident.cpp; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-ident.Tpo" "authplugins/$(DEPDIR)/e2guardian-ident.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-ident.Tpo"; exit 1; fi
#	source='authplugins/ident.cpp' object='authplugins/e2guardian-ident.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-ident.o `test -f 'authplugins/ident.cpp' || echo '$(srcdir)/'`authplugins/ident.cpp

authplugins/e2guardian-ident.obj: authplugins/ident.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-ident.obj -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-ident.Tpo" -c -o authplugins/e2guardian-ident.obj `if test -f 'authplugins/ident.cpp'; then $(CYGPATH_W) 'authplugins/ident.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ident.cpp'; fi`; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-ident.Tpo" "authplugins/$(DEPDIR)/e2guardian-ident.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-ident.Tpo"; exit 1; fi
#	source='authplugins/ident.cpp' object='authplugins/e2guardian-ident.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-ident.obj `if test -f 'authplugins/ident.cpp'; then $(CYGPATH_W) 'authplugins/ident.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ident.cpp'; fi`

authplugins/e2guardian-ip.o: authplugins/ip.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-ip.o -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-ip.Tpo" -c -o authplugins/e2guardian-ip.o `test -f 'authplugins/ip.cpp' || echo '$(srcdir)/'`authplugins/ip.cpp; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-ip.Tpo" "authplugins/$(DEPDIR)/e2guardian-ip.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-ip.Tpo"; exit 1; fi
#	source='authplugins/ip.cpp' object='authplugins/e2guardian-ip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-ip.o `test -f 'authplugins/ip.cpp' || echo '$(srcdir)/'`authplugins/ip.cpp

authplugins/e2guardian-ip.obj: authplugins/ip.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-ip.obj -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-ip.Tpo" -c -o authplugins/e2guardian-ip.obj `if test -f 'authplugins/ip.cpp'; then $(CYGPATH_W) 'authplugins/ip.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ip.cpp'; fi`; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-ip.Tpo" "authplugins/$(DEPDIR)/e2guardian-ip.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-ip.Tpo"; exit 1; fi
#	source='authplugins/ip.cpp' object='authplugins/e2guardian-ip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-ip.obj `if test -f 'authplugins/ip.cpp'; then $(CYGPATH_W) 'authplugins/ip.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ip.cpp'; fi`

authplugins/e2guardian-dnsauth.o: authplugins/dnsauth.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-dnsauth.o -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-dnsauth.Tpo" -c -o authplugins/e2guardian-dnsauth.o `test -f 'authplugins/dnsauth.cpp' || echo '$(srcdir)/'`authplugins/dnsauth.cpp; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-dnsauth.Tpo" "authplugins/$(DEPDIR)/e2guardian-dnsauth.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-dnsauth.Tpo"; exit 1; fi
#	source='authplugins/dnsauth.cpp' object='authplugins/e2guardian-dnsauth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-dnsauth.o `test -f 'authplugins/dnsauth.cpp' || echo '$(srcdir)/'`authplugins/dnsauth.cpp

authplugins/e2guardian-dnsauth.obj: authplugins/dnsauth.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-dnsauth.obj -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-dnsauth.Tpo" -c -o authplugins/e2guardian-dnsauth.obj `if test -f 'authplugins/dnsauth.cpp'; then $(CYGPATH_W) 'authplugins/dnsauth.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/dnsauth.cpp'; fi`; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-dnsauth.Tpo" "authplugins/$(DEPDIR)/e2guardian-dnsauth.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-dnsauth.Tpo"; exit 1; fi
#	source='authplugins/dnsauth.cpp' object='authplugins/e2guardian-dnsauth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-dnsauth.obj `if test -f 'authplugins/dnsauth.cpp'; then $(CYGPATH_W) 'authplugins/dnsauth.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/dnsauth.cpp'; fi`

authplugins/e2guardian-port.o: authplugins/port.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-port.o -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-port.Tpo" -c -o authplugins/e2guardian-port.o `test -f 'authplugins/port.cpp' || echo '$(srcdir)/'`authplugins/port.cpp; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-port.Tpo" "authplugins/$(DEPDIR)/e2guardian-port.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-port.Tpo"; exit 1; fi
#	source='authplugins/port.cpp' object='authplugins/e2guardian-port.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-port.o `test -f 'authplugins/port.cpp' || echo '$(srcdir)/'`authplugins/port.cpp

authplugins/e2guardian-port.obj: authplugins/port.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-port.obj -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-port.Tpo" -c -o authplugins/e2guardian-port.obj `if test -f 'authplugins/port.cpp'; then $(CYGPATH_W) 'authplugins/port.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/port.cpp'; fi`; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-port.Tpo" "authplugins/$(DEPDIR)/e2guardian-port.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-port.Tpo"; exit 1; fi
#	source='authplugins/port.cpp' object='authplugins/e2guardian-port.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-port.obj `if test -f 'authplugins/port.cpp'; then $(CYGPATH_W) 'authplugins/port.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/port.cpp'; fi`

authplugins/e2guardian-ntlm.o: authplugins/ntlm.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-ntlm.o -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-ntlm.Tpo" -c -o authplugins/e2guardian-ntlm.o `test -f 'authplugins/ntlm.cpp' || echo '$(srcdir)/'`authplugins/ntlm.cpp; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-ntlm.Tpo" "authplugins/$(DEPDIR)/e2guardian-ntlm.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-ntlm.Tpo"; exit 1; fi
#	source='authplugins/ntlm.cpp' object='authplugins/e2guardian-ntlm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-ntlm.o `test -f 'authplugins/ntlm.cpp' || echo '$(srcdir)/'`authplugins/ntlm.cpp

authplugins/e2guardian-ntlm.obj: authplugins/ntlm.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-ntlm.obj -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-ntlm.Tpo" -c -o authplugins/e2guardian-ntlm.obj `if test -f 'authplugins/ntlm.cpp'; then $(CYGPATH_W) 'authplugins/ntlm.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ntlm.cpp'; fi`; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-ntlm.Tpo" "authplugins/$(DEPDIR)/e2guardian-ntlm.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-ntlm.Tpo"; exit 1; fi
#	source='authplugins/ntlm.cpp' object='authplugins/e2guardian-ntlm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-ntlm.obj `if test -f 'authplugins/ntlm.cpp'; then $(CYGPATH_W) 'authplugins/ntlm.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ntlm.cpp'; fi`

authplugins/e2guardian-digest.o: authplugins/digest.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-digest.o -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-digest.Tpo" -c -o authplugins/e2guardian-digest.o `test -f 'authplugins/digest.cpp' || echo '$(srcdir)/'`authplugins/digest.cpp; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-digest.Tpo" "authplugins/$(DEPDIR)/e2guardian-digest.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-digest.Tpo"; exit 1; fi
#	source='authplugins/digest.cpp' object='authplugins/e2guardian-digest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-digest.o `test -f 'authplugins/digest.cpp' || echo '$(srcdir)/'`authplugins/digest.cpp

authplugins/e2guardian-digest.obj: authplugins/digest.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -MT authplugins/e2guardian-digest.obj -MD -MP -MF "authplugins/$(DEPDIR)/e2guardian-digest.Tpo" -c -o authplugins/e2guardian-digest.obj `if test -f 'authplugins/digest.cpp'; then $(CYGPATH_W) 'authplugins/digest.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/digest.cpp'; fi`; \
	then mv -f "authplugins/$(DEPDIR)/e2guardian-digest.Tpo" "authplugins/$(DEPDIR)/e2guardian-digest.Po"; else rm -f "authplugins/$(DEPDIR)/e2guardian-digest.Tpo"; exit 1; fi
#	source='authplugins/digest.cpp' object='authplugins/e2guardian-digest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(e2guardian_CPPFLAGS) $(CPPFLAGS) $(e2guardian_CXXFLAGS) $(CXXFLAGS) -c -o authplugins/e2guardian-digest.obj `if test -f 'authplugins/digest.cpp'; then $(CYGPATH_W) 'authplugins/digest.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/digest.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f authplugins/$(DEPDIR)/$(am__dirstamp)
	-rm -f authplugins/$(am__dirstamp)
	-rm -f contentscanners/$(DEPDIR)/$(am__dirstamp)
	-rm -f contentscanners/$(am__dirstamp)
	-rm -f downloadmanagers/$(DEPDIR)/$(am__dirstamp)
	-rm -f downloadmanagers/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) authplugins/$(DEPDIR) contentscanners/$(DEPDIR) downloadmanagers/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-sbinPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) authplugins/$(DEPDIR) contentscanners/$(DEPDIR) downloadmanagers/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-sbinPROGRAMS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-sbinPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-sbinPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
